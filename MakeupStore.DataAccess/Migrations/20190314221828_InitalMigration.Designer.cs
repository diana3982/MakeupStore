// <auto-generated />
using System;
using MakeupStore.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MakeupStore.DataAccess.Migrations
{
    [DbContext(typeof(MakeupStoreDbContext))]
    [Migration("20190314221828_InitalMigration")]
    partial class InitalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MakeupStore.BLL.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DefStoreId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("DefStoreId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MakeupStore.BLL.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemName");

                    b.Property<int?>("LocationId");

                    b.Property<float>("Price");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quanity");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("MakeupStore.BLL.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationName");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MakeupStore.BLL.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderCustomerId");

                    b.Property<int?>("OrderLocationId");

                    b.Property<DateTime>("OrderTime");

                    b.Property<float>("Total");

                    b.HasKey("Id");

                    b.HasIndex("OrderCustomerId");

                    b.HasIndex("OrderLocationId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MakeupStore.BLL.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsLtdEd");

                    b.Property<int?>("OrderId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MakeupStore.BLL.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<float>("Price");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MakeupStore.BLL.Customer", b =>
                {
                    b.HasOne("MakeupStore.BLL.Location", "DefStore")
                        .WithMany()
                        .HasForeignKey("DefStoreId");
                });

            modelBuilder.Entity("MakeupStore.BLL.Inventory", b =>
                {
                    b.HasOne("MakeupStore.BLL.Location", "Location")
                        .WithMany("StoreInventory")
                        .HasForeignKey("LocationId");

                    b.HasOne("MakeupStore.BLL.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("MakeupStore.BLL.Order", b =>
                {
                    b.HasOne("MakeupStore.BLL.Customer", "OrderCustomer")
                        .WithMany("OrderHistory")
                        .HasForeignKey("OrderCustomerId");

                    b.HasOne("MakeupStore.BLL.Location", "OrderLocation")
                        .WithMany("StoreHistory")
                        .HasForeignKey("OrderLocationId");
                });

            modelBuilder.Entity("MakeupStore.BLL.OrderItem", b =>
                {
                    b.HasOne("MakeupStore.BLL.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("MakeupStore.BLL.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
